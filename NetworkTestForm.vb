Imports System.Windows.Forms
Imports System.Drawing

''' <summary>
''' ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Network
''' </summary>
Public Class NetworkTestForm
    Inherits Form
    
    Private lblStatus As Label
    Private btnTest As Button
    Private txtResults As TextBox
    Private btnClose As Button
    
    Public Sub New()
        InitializeComponent()
    End Sub
    
    Private Sub InitializeComponent()
        Me.Text = "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Network"
        Me.Size = New Size(600, 500)
        Me.StartPosition = FormStartPosition.CenterScreen
        Me.FormBorderStyle = FormBorderStyle.FixedDialog
        Me.MaximizeBox = False
        
        ' ‡∏™‡∏£‡πâ‡∏≤‡∏á Controls
        lblStatus = New Label()
        lblStatus.Text = "‡∏Å‡∏î '‡∏ó‡∏î‡∏™‡∏≠‡∏ö' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢"
        lblStatus.Location = New Point(20, 20)
        lblStatus.Size = New Size(550, 30)
        lblStatus.Font = New Font("Segoe UI", 10, FontStyle.Bold)
        
        btnTest = New Button()
        btnTest.Text = "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠"
        btnTest.Location = New Point(20, 60)
        btnTest.Size = New Size(150, 35)
        btnTest.BackColor = Color.FromArgb(0, 123, 255)
        btnTest.ForeColor = Color.White
        btnTest.FlatStyle = FlatStyle.Flat
        AddHandler btnTest.Click, AddressOf BtnTest_Click
        
        txtResults = New TextBox()
        txtResults.Location = New Point(20, 110)
        txtResults.Size = New Size(540, 300)
        txtResults.Multiline = True
        txtResults.ScrollBars = ScrollBars.Vertical
        txtResults.ReadOnly = True
        txtResults.Font = New Font("Consolas", 9)
        txtResults.BackColor = Color.FromArgb(248, 249, 250)
        
        btnClose = New Button()
        btnClose.Text = "‡∏õ‡∏¥‡∏î"
        btnClose.Location = New Point(485, 420)
        btnClose.Size = New Size(75, 30)
        btnClose.BackColor = Color.FromArgb(108, 117, 125)
        btnClose.ForeColor = Color.White
        btnClose.FlatStyle = FlatStyle.Flat
        AddHandler btnClose.Click, AddressOf BtnClose_Click
        
        ' ‡πÄ‡∏û‡∏¥‡πà‡∏° Controls ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°
        Me.Controls.AddRange({lblStatus, btnTest, txtResults, btnClose})
    End Sub
    
    Private Sub BtnTest_Click(sender As Object, e As EventArgs)
        btnTest.Enabled = False
        btnTest.Text = "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö..."
        txtResults.Clear()
        
        Try
            txtResults.AppendText("=== ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Network ===" & vbNewLine)
            txtResults.AppendText($"‡πÄ‡∏ß‡∏•‡∏≤: {DateTime.Now:yyyy-MM-dd HH:mm:ss}" & vbNewLine)
            txtResults.AppendText("" & vbNewLine)
            
            txtResults.AppendText("Logic ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:" & vbNewLine)
            txtResults.AppendText("‚Ä¢ ‡∏ñ‡πâ‡∏≤‡∏õ‡∏¥‡∏á 172.24.0.3 ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ = ‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢ OA" & vbNewLine)
            txtResults.AppendText("‚Ä¢ ‡∏ñ‡πâ‡∏≤‡∏õ‡∏¥‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á 10.24.179.2 ‡πÅ‡∏•‡∏∞ 172.24.0.3 = ‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢ FAB" & vbNewLine)
            txtResults.AppendText("‚Ä¢ ‡∏ñ‡πâ‡∏≤‡∏õ‡∏¥‡∏á‡πÑ‡∏î‡πâ‡πÅ‡∏Ñ‡πà 172.24.0.3 = ‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢ FAB" & vbNewLine)
            txtResults.AppendText("" & vbNewLine)
            
            ' ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
            txtResults.AppendText("‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠..." & vbNewLine)
            Application.DoEvents()
            
            Dim result = NetworkPathManager.CheckNetworkConnection()
            
            txtResults.AppendText("" & vbNewLine)
            txtResults.AppendText("=== ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö ===" & vbNewLine)
            
            If result.IsConnected Then
                txtResults.AppendText($"‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!" & vbNewLine)
                txtResults.AppendText($"‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢: {result.NetworkType}" & vbNewLine)
                txtResults.AppendText($"‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå: {result.ServerIP}" & vbNewLine)
                txtResults.AppendText($"Base Path: {result.BasePath}" & vbNewLine)
                
                lblStatus.Text = $"‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢ {result.NetworkType} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! üéâ"
                lblStatus.ForeColor = Color.Green
            Else
                txtResults.AppendText($"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ" & vbNewLine)
                txtResults.AppendText($"‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {result.ErrorMessage}" & vbNewLine)
                
                lblStatus.Text = "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢‡πÑ‡∏î‡πâ ‚ùå"
                lblStatus.ForeColor = Color.Red
            End If
            
            txtResults.AppendText("" & vbNewLine)
            txtResults.AppendText("=== ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Path ‡∏ï‡πà‡∏≤‡∏á‡πÜ ===" & vbNewLine)
            
            ' ‡∏ó‡∏î‡∏™‡∏≠‡∏ö path ‡∏ï‡πà‡∏≤‡∏á‡πÜ
            Dim paths As New Dictionary(Of String, String) From {
                {"Excel Database", NetworkPathManager.GetExcelDatabasePath()},
                {"Access Database", NetworkPathManager.GetAccessDatabasePath()},
                {"Update System", NetworkPathManager.GetUpdateSystemPath()},
                {"Film Character Check", NetworkPathManager.GetFilmCharacterCheckPath()},
                {"Drawing Folder", NetworkPathManager.GetDrawingFolderPath()}
            }
            
            For Each kvp In paths
                If Not String.IsNullOrEmpty(kvp.Value) Then
                    Dim exists = NetworkPathManager.PathExists(kvp.Value)
                    Dim statusIcon = If(exists, "‚úÖ", "‚ö†Ô∏è")
                    txtResults.AppendText($"{statusIcon} {kvp.Key}: {kvp.Value}" & vbNewLine)
                Else
                    txtResults.AppendText($"‚ùå {kvp.Key}: ‡πÑ‡∏°‡πà‡∏°‡∏µ path" & vbNewLine)
                End If
            Next
            
            txtResults.AppendText("" & vbNewLine)
            txtResults.AppendText("=== Network Status ===" & vbNewLine)
            txtResults.AppendText(NetworkPathManager.GetNetworkStatus() & vbNewLine)
            
        Catch ex As Exception
            txtResults.AppendText($"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {ex.Message}" & vbNewLine)
            lblStatus.Text = "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö"
            lblStatus.ForeColor = Color.Red
        Finally
            btnTest.Enabled = True
            btnTest.Text = "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠"
        End Try
    End Sub
    
    Private Sub BtnClose_Click(sender As Object, e As EventArgs)
        Me.Close()
    End Sub
    
End Class 