Imports System.Windows.Forms
Imports System.Drawing

''' <summary>
''' ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ network ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏û‡∏≤‡∏ò‡∏ï‡πà‡∏≤‡∏á‡πÜ
''' </summary>
Public Class NetworkTestForm
    Inherits Form
    
    Private WithEvents btnTestConnection As Button
    Private WithEvents btnRefresh As Button
    Private WithEvents txtStatus As TextBox
    Private WithEvents lblTitle As Label
    
    Public Sub New()
        InitializeComponent()
    End Sub
    
    Private Sub InitializeComponent()
        ' ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°
        Me.Text = "‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Network"
        Me.Size = New Size(600, 500)
        Me.StartPosition = FormStartPosition.CenterParent
        Me.FormBorderStyle = FormBorderStyle.FixedDialog
        Me.MaximizeBox = False
        Me.MinimizeBox = False
        Me.BackColor = Color.White
        
        ' ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠
        lblTitle = New Label()
        lblTitle.Text = "üåê ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Network OA/FAB"
        lblTitle.Font = New Font("Segoe UI", 14, FontStyle.Bold)
        lblTitle.Location = New Point(20, 20)
        lblTitle.Size = New Size(550, 30)
        lblTitle.ForeColor = Color.FromArgb(52, 73, 94)
        lblTitle.TextAlign = ContentAlignment.MiddleCenter
        
        ' ‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
        btnTestConnection = New Button()
        btnTestConnection.Text = "üîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠"
        btnTestConnection.Size = New Size(150, 40)
        btnTestConnection.Location = New Point(150, 70)
        btnTestConnection.BackColor = Color.FromArgb(52, 152, 219)
        btnTestConnection.ForeColor = Color.White
        btnTestConnection.FlatStyle = FlatStyle.Flat
        btnTestConnection.FlatAppearance.BorderSize = 0
        btnTestConnection.Font = New Font("Segoe UI", 10, FontStyle.Bold)
        
        ' ‡∏õ‡∏∏‡πà‡∏°‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä
        btnRefresh = New Button()
        btnRefresh.Text = "üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä"
        btnRefresh.Size = New Size(100, 40)
        btnRefresh.Location = New Point(320, 70)
        btnRefresh.BackColor = Color.FromArgb(39, 174, 96)
        btnRefresh.ForeColor = Color.White
        btnRefresh.FlatStyle = FlatStyle.Flat
        btnRefresh.FlatAppearance.BorderSize = 0
        btnRefresh.Font = New Font("Segoe UI", 10, FontStyle.Bold)
        
        ' ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
        txtStatus = New TextBox()
        txtStatus.Multiline = True
        txtStatus.ReadOnly = True
        txtStatus.ScrollBars = ScrollBars.Vertical
        txtStatus.Location = New Point(20, 130)
        txtStatus.Size = New Size(540, 300)
        txtStatus.Font = New Font("Consolas", 10)
        txtStatus.BackColor = Color.FromArgb(248, 249, 250)
        txtStatus.BorderStyle = BorderStyle.FixedSingle
        
        ' ‡πÄ‡∏û‡∏¥‡πà‡∏° controls ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ü‡∏≠‡∏£‡πå‡∏°
        Me.Controls.AddRange({lblTitle, btnTestConnection, btnRefresh, txtStatus})
        
        ' ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°
        TestNetworkConnection()
    End Sub
    
    Private Sub btnTestConnection_Click(sender As Object, e As EventArgs) Handles btnTestConnection.Click
        TestNetworkConnection()
    End Sub
    
    Private Sub btnRefresh_Click(sender As Object, e As EventArgs) Handles btnRefresh.Click
        TestNetworkConnection()
    End Sub
    
    Private Sub TestNetworkConnection()
        Try
            txtStatus.Clear()
            txtStatus.AppendText("üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ network..." & vbNewLine & vbNewLine)
            
            Application.DoEvents()
            
            ' ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
            Dim networkResult = NetworkPathManager.CheckNetworkConnection()
            
            If networkResult.IsConnected Then
                txtStatus.AppendText($"‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!" & vbNewLine)
                txtStatus.AppendText($"üåê Network Type: {networkResult.NetworkType}" & vbNewLine)
                txtStatus.AppendText($"üñ•Ô∏è Server IP: {networkResult.ServerIP}" & vbNewLine)
                txtStatus.AppendText($"üìÅ Base Path: {networkResult.BasePath}" & vbNewLine)
                txtStatus.AppendText(vbNewLine & "üìÇ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏û‡∏≤‡∏ò‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:" & vbNewLine)
                txtStatus.AppendText("=" & New String("="c, 50) & vbNewLine)
                
                ' ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏û‡∏≤‡∏ò‡∏ï‡πà‡∏≤‡∏á‡πÜ
                TestPath("Excel Database", NetworkPathManager.GetExcelDatabasePath())
                TestPath("Access Database", NetworkPathManager.GetAccessDatabasePath())
                TestPath("Update System", NetworkPathManager.GetUpdateSystemPath())
                TestPath("Film Character Check", NetworkPathManager.GetFilmCharacterCheckPath())
                TestPath("Drawing Folder", NetworkPathManager.GetDrawingFolderPath())
                
                ' ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏û‡∏≤‡∏ò‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á
                txtStatus.AppendText(vbNewLine & "üîß ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏û‡∏≤‡∏ò‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á:" & vbNewLine)
                TestPath("Drawing Folder (Custom)", NetworkPathManager.GetCustomPath("Film charecter check\Drawing"))
                TestPath("Debug Systems (Custom)", NetworkPathManager.GetCustomPath("Film charecter check\DebugSystems"))
                
            Else
                txtStatus.AppendText($"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ" & vbNewLine)
                txtStatus.AppendText($"üî¥ ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {networkResult.ErrorMessage}" & vbNewLine)
                txtStatus.AppendText(vbNewLine & "üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:" & vbNewLine)
                txtStatus.AppendText("‚Ä¢ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢" & vbNewLine)
                txtStatus.AppendText("‚Ä¢ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö IP Address ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå" & vbNewLine)
                txtStatus.AppendText("‚Ä¢ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á Network Share" & vbNewLine)
            End If
            
            txtStatus.AppendText(vbNewLine & "‚è∞ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô: " & DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss"))
            
        Catch ex As Exception
            txtStatus.AppendText($"üí• ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö: {ex.Message}" & vbNewLine)
        End Try
    End Sub
    
    Private Sub TestPath(description As String, path As String)
        Try
            If String.IsNullOrEmpty(path) Then
                txtStatus.AppendText($"‚ùå {description}: ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏û‡∏≤‡∏ò" & vbNewLine)
                Return
            End If
            
            Dim exists = NetworkPathManager.PathExists(path)
            Dim status = If(exists, "‚úÖ ‡∏û‡∏ö", "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö")
            
            txtStatus.AppendText($"{status} {description}:" & vbNewLine)
            txtStatus.AppendText($"   üìç {path}" & vbNewLine)
            
        Catch ex As Exception
            txtStatus.AppendText($"‚ùå {description}: ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î - {ex.Message}" & vbNewLine)
        End Try
    End Sub
    
End Class 